Mapping Giriþ:
SignalR api katmanýna gelip mapping klasörü oluþtur.
Mapping klasörüne gel saü týk sýnýf ekle ismi teker teker sýnýflarýmýz ismiyle bir tanýmla
"CreateMap<About, ResultAboutDtos>().ReverseMap();" Örnek sýnýf tanýmlama bu þekilde eþleþtirme -> Dto ise DtoLayer sýnýfýyla ayný tanýmlandý eþleþtirildi.
"builder.Services.AddAutoMapper(Assembly.GetExecutingAssembly());"//AutoMapper için konfigrasyon -> Program.cs tanýmlancak konfigrasyon.


SignalR Giriþ: 
1- WebUI sað týk -> add -> Client-Side Library -> @microsoft signalr olaný seç oradan -> disc - browser - signalr.js - signalr.js min
2- SignalR api katmanýna Hubs klasörü oluþtur -> SignalRHub sýnýfýna Hub ile eþleþtirdik
3- Program.cs tarafýnda SignalR Hubs Cors için konfigrasyon tanýmlandý ve baþlamasý için tanýmlanan cors policy geçildi.
4- Signalr endpoint tanýmlanmasý gerekiyor signalr istek atabilmek için program.cs þu þekilde "app.MapHub<SignalRHub>("/signalrhub");" tanýmlanýr.
5- SignalRDefault UI kýsmýna controller oluþturuldu.
6- SignalR için Layout tarafýnda düzeltme: @RenderSection("Scripts", required: false) bu þekilde.
7- View içine SignalR Baðlantýsý:
<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
@section Scripts {
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <!-- Düzeltme: cold-md-12 yerine col-md-12 -->
                    <div class="card">
                        <script type="text/javascript">
                            $(document).ready(function () { // Düzeltme: $(document).ready() fonksiyonu düzgün syntax ile kullanýlmalý
                                var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:7123/SignalRHub").build();

                                connection.start().then(() => {
                                    $("#connstatus").text(connection.state);
                                }).catch((err) => { console.log(err) });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-8 offset-2">
        <!-- Düzeltme: cold-md-8 yerine col-md-8 -->
        <div class="alert alert-success">
            Baðlantýnýn Durumu : <strong id="connstatus"></strong>
        </div>
    </div>
</div>
8- SignalR script kaldýrmak için shared -> _Layout -> en altta ki scriptleri kopyala Indexdeki üste yapýþtýr.
9- SignalR apii SignalRHub sýnýfýnda Kategori Sayýlarý getirebilmek için kodlama yazýldý.
10- SignalRDefault içindeki Index View ise Tanýmlamalar geçildi
11- SignalRDefault Index2 diye bir view oluþturduk ve baðlantýyý ayný þekilde geçtik fakat sadece SetInterval eklendi oda kaç saniye de bir yenilensin yani
database ekleme yaptýðýnda kaç saniyede bir yenilenme yapsýn da web sayfasýnda göstersin. Index2 setInterval bölümünü inceleyebilirsin.


Order Ýliþkisel Tablo
1- Order Tablosu oluþtu ve proplar yazýldý.
2- OrderDetails Tablosu oluþtu ve proplar yazýldý.
3- OrderDetails Tablosunda ProductID , Product sýnýfý geçildi çünkü OrderDetails içinde ürünün ýd ve ismi olacak
4- OrderDetails Tablosunda OrderID , Order sýnýfý geçildi çünkü order açýklama veya sipariþlerinin toplamlarý olacak þekilde
5- Order Tablosunda ise OrderDetails Listelememiz gerekiyor OrderDetailsda veriler listelendiði için
6- Product tablosunda ise OrderDetails listelememiz gerekiyor çünkü product verileri listelendiði için


Order Sipariþ Ýçin Sql Sorgu Trigger Yazýldý
----- Bu Trigger Ordera açýlan bir salon ve OrderDetailsda bu salon ve verilen yiyecekler geçildiðinde toplayýp MoneyCases yazdýrýyor
ALTER Trigger [dbo].[IncreaseOrderTotalPrice]
On [dbo].[OrderDetails] 
After Insert 
As 
Declare @orderID int 
Declare @orderPrice decimal
select @orderID = OrderID from inserted
select @orderPrice = TotalPrice from inserted
Update Orders Set TotalPrice = TotalPrice +  @orderPrice where OrderID = @orderID


---- Bu Trigger Ordera açýlan bir salondaki OrderDetails eþitlendi ve OrderDetailsda silinen bir yiyecek MoneyCases da eksi yazýlýyor
ALTER Trigger [dbo].[DecreaseOrderTotalPrice]
On [dbo].[OrderDetails] 
After Delete
As 
Declare @orderID int 
Declare @orderPrice decimal
select @orderID = OrderID from deleted
select @orderPrice = TotalPrice from deleted
Update Orders Set TotalPrice = TotalPrice -  @orderPrice where OrderID = @orderID


------ Bu Trigger OrderDetailsýn Description tarafýna bakýyor eðer ki Hesap Kapatýldý deniyorsa TotalAmounta direk üstüne toplama iþlemi yapacaktýr.
ALTER trigger [dbo].[SumMoneyCases]
on [dbo].[Orders]
After Update
As
Declare @description nvarchar(max)
Declare @totalPrice decimal(18,2)
select @description = Description from inserted
select @totalPrice = TotalPrice from inserted
if(@description = 'Hesap Kapatýldý')
begin 
Update MoneyCases set TotalAmount = TotalAmount + @totalPrice 
end

Eðerki SQL de bir sütunu farklý bir türde tasarlamak isteniyorsa
        [Column(TypeName = "Date")] ----------> Colum kýsmýna typename de Date türü geçildi.
        public DateTime OrderDate { get; set; }

